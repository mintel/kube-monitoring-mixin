{
   "__inputs": [ ],
   "__requires": [ ],
   "annotations": {
      "list": [ ]
   },
   "description": "Provides an analysis of costs by namespace",
   "editable": "true",
   "gnetId": null,
   "graphTooltip": 0,
   "hideControls": false,
   "id": null,
   "links": [ ],
   "panels": [
      {
         "columns": [
            {
               "expr": "(\n  sum(container_spec_cpu_shares{namespace=\"$namespace\",cloud_google_com_gke_preemptible!=\"true\"}/1000*($costcpu - ($costcpu / 100 * $costDiscount))) by(pod_name)\n  or\n  count(\n    count(container_spec_cpu_shares{namespace=\"$namespace\"}) by(pod_name)\n  ) by(pod_name) -1\n)\n\n+\n\n(\n  sum(container_spec_cpu_shares{namespace=\"$namespace\",cloud_google_com_gke_preemptible=\"true\"}/1000*$costpcpu) by(pod_name)\n  or\n  count(\n    count(container_spec_cpu_shares{namespace=\"$namespace\"}) by(pod_name)\n  ) by(pod_name) -1\n)",
               "format": "table",
               "hide": false,
               "instant": true,
               "interval": "",
               "intervalFactor": 1,
               "legendFormat": "{{ pod_name }}",
               "refId": "A"
            },
            {
               "expr": "(\n  sum(container_spec_memory_limit_bytes{namespace=\"$namespace\",cloud_google_com_gke_preemptible!=\"true\"}/1024/1024/1024*($costram- ($costram / 100 * $costDiscount))) by(pod_name)\n  or\n  count(\n    count(container_spec_memory_limit_bytes{namespace=\"$namespace\"}) by(pod_name)\n  ) by(pod_name) -1\n)\n\n+\n\n(\n  sum(container_spec_memory_limit_bytes{namespace=\"$namespace\",cloud_google_com_gke_preemptible=\"true\"}/1024/1024/1024*$costpram) by(pod_name)\n  or\n  count(\n    count(container_spec_memory_limit_bytes{namespace=\"$namespace\"}) by(pod_name)\n  ) by(pod_name) -1\n)",
               "format": "table",
               "hide": false,
               "instant": true,
               "intervalFactor": 1,
               "legendFormat": "{{ namespace }}",
               "refId": "B"
            },
            {
               "expr": "vector(0)",
               "format": "table",
               "instant": true,
               "intervalFactor": 1,
               "legendFormat": "{{ namespace }}",
               "refId": "C"
            },
            {
               "expr": "(\n  sum(container_spec_cpu_shares{namespace=\"$namespace\",cloud_google_com_gke_preemptible!=\"true\"}/1000*($costcpu - ($costcpu / 100 * $costDiscount))) by(pod_name)\n  or\n  count(\n    count(container_spec_cpu_shares{namespace=\"$namespace\"}) by(pod_name)\n  ) by(pod_name) -1\n)\n\n+\n\n(\n  sum(container_spec_cpu_shares{namespace=\"$namespace\",cloud_google_com_gke_preemptible=\"true\"}/1000*$costpcpu) by(pod_name)\n  or\n  count(\n    count(container_spec_cpu_shares{namespace=\"$namespace\"}) by(pod_name)\n  ) by(pod_name) -1\n)\n\n# Now ram\n\n+ \n(\n  sum(container_spec_memory_limit_bytes{namespace=\"$namespace\",cloud_google_com_gke_preemptible!=\"true\"}/1024/1024/1024*($costram- ($costram / 100 * $costDiscount))) by(pod_name)\n  or\n  count(\n    count(container_spec_memory_limit_bytes{namespace=\"$namespace\"}) by(pod_name)\n  ) by(pod_name) -1\n)\n\n+\n\n(\n  sum(container_spec_memory_limit_bytes{namespace=\"$namespace\",cloud_google_com_gke_preemptible=\"true\"}/1024/1024/1024*$costpram) by(pod_name)\n  or\n  count(\n    count(container_spec_memory_limit_bytes{namespace=\"$namespace\"}) by(pod_name)\n  ) by(pod_name) -1\n)\n\n",
               "format": "table",
               "hide": false,
               "instant": true,
               "intervalFactor": 1,
               "refId": "D"
            },
            {
               "expr": "sum(\n   count(count(container_spec_cpu_shares{namespace=\"$namespace\"}) by (pod_name)) by (pod_name)  \n   * on (pod_name) \n   sum(irate(container_cpu_usage_seconds_total{namespace=\"$namespace\"}[1m])) by (pod_name)\n) by (pod_name) * 1000\n/\nsum(container_spec_cpu_shares{namespace=\"$namespace\"}) by (pod_name) * 100",
               "format": "table",
               "hide": false,
               "instant": true,
               "intervalFactor": 1,
               "legendFormat": "{{ pod_name }}",
               "refId": "E"
            },
            {
               "expr": "sum(\n   count(count(container_memory_working_set_bytes{namespace=\"$namespace\"}) by (pod_name)) by (pod_name)  \n   * on (pod_name) \n   sum(avg_over_time(container_memory_working_set_bytes{namespace=\"$namespace\"}[1m])) by (pod_name)\n) by (pod_name)\n/\nsum(container_spec_memory_limit_bytes{namespace=\"$namespace\"}) by (pod_name) * 100",
               "format": "table",
               "hide": false,
               "instant": true,
               "intervalFactor": 1,
               "legendFormat": "{{ namespace }}",
               "refId": "F"
            }
         ],
         "datasource": "$ds",
         "description": "",
         "gridPos": {
            "h": 9,
            "w": 16,
            "x": 0,
            "y": 0
         },
         "id": 2,
         "styles": [
            {
               "alias": "Pod",
               "align": "auto",
               "colorMode": null,
               "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "#c15c17",
                  "rgba(245, 54, 54, 0.9)"
               ],
               "dateFormat": "YYYY-MM-DD HH:mm:ss",
               "decimals": 2,
               "link": true,
               "linkTooltip": "Click to drill down into pod",
               "linkUrl": "d/at-cost-analysis-pod/cost-analysis-by-pod?&var-namespace=$namespace&var-pod=$__cell",
               "pattern": "pod_name",
               "thresholds": [
                  "30",
                  "80"
               ],
               "type": "string",
               "unit": "currencyUSD"
            },
            {
               "alias": "RAM",
               "align": "auto",
               "colorMode": null,
               "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
               ],
               "dateFormat": "YYYY-MM-DD HH:mm:ss",
               "decimals": 2,
               "pattern": "Value #B",
               "thresholds": [ ],
               "type": "number",
               "unit": "currencyUSD"
            },
            {
               "alias": "CPU",
               "align": "auto",
               "colorMode": null,
               "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
               ],
               "dateFormat": "YYYY-MM-DD HH:mm:ss",
               "decimals": 2,
               "mappingType": 1,
               "pattern": "Value #A",
               "thresholds": [ ],
               "type": "number",
               "unit": "currencyUSD"
            },
            {
               "alias": "",
               "align": "auto",
               "colorMode": null,
               "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
               ],
               "dateFormat": "YYYY-MM-DD HH:mm:ss",
               "decimals": 2,
               "mappingType": 1,
               "pattern": "Time",
               "thresholds": [ ],
               "type": "hidden",
               "unit": "short"
            },
            {
               "alias": "Total",
               "align": "auto",
               "colorMode": null,
               "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
               ],
               "dateFormat": "YYYY-MM-DD HH:mm:ss",
               "decimals": 2,
               "mappingType": 1,
               "pattern": "Value #D",
               "thresholds": [ ],
               "type": "number",
               "unit": "currencyUSD"
            },
            {
               "alias": "CPU Utilisation",
               "align": "auto",
               "colorMode": "value",
               "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "#ef843c",
                  "#bf1b00"
               ],
               "dateFormat": "YYYY-MM-DD HH:mm:ss",
               "decimals": 2,
               "mappingType": 1,
               "pattern": "Value #E",
               "thresholds": [
                  "50",
                  "80"
               ],
               "type": "number",
               "unit": "percent"
            },
            {
               "alias": "RAM Utilisation",
               "align": "auto",
               "colorMode": "value",
               "colors": [
                  "rgba(50, 172, 45, 0.97)",
                  "#c15c17",
                  "rgba(245, 54, 54, 0.9)"
               ],
               "dateFormat": "YYYY-MM-DD HH:mm:ss",
               "decimals": 2,
               "mappingType": 1,
               "pattern": "Value #F",
               "thresholds": [
                  "50",
                  "80"
               ],
               "type": "number",
               "unit": "percent"
            },
            {
               "alias": "Storage - n/a",
               "align": "auto",
               "colorMode": null,
               "colors": [
                  "rgba(245, 54, 54, 0.9)",
                  "rgba(237, 129, 40, 0.89)",
                  "rgba(50, 172, 45, 0.97)"
               ],
               "dateFormat": "YYYY-MM-DD HH:mm:ss",
               "decimals": 2,
               "mappingType": 1,
               "pattern": "Value #C",
               "thresholds": [ ],
               "type": "number",
               "unit": "currencyUSD"
            }
         ],
         "targets": [ ],
         "timeFrom": null,
         "timeShift": null,
         "title": "Pod cost and utilisation analysis",
         "type": "table"
      }
   ],
   "refresh": "",
   "rows": [ ],
   "schemaVersion": 14,
   "style": "dark",
   "tags": [
      "mintel",
      "cost",
      "utilisation",
      "metrics"
   ],
   "templating": {
      "list": [
         {
            "current": {
               "text": "Prometheus",
               "value": "Prometheus"
            },
            "hide": 2,
            "label": null,
            "name": "ds",
            "options": [ ],
            "query": "prometheus",
            "refresh": 1,
            "regex": "",
            "type": "datasource"
         },
         {
            "allValue": null,
            "current": {
               "text": "30",
               "value": "30"
            },
            "datasource": "Prometheus",
            "hide": 0,
            "includeAll": false,
            "label": "Disc.",
            "multi": false,
            "name": "costDiscount",
            "options": [ ],
            "query": "$._config.cost_discount",
            "refresh": 1,
            "regex": "",
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [ ],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
         },
         {
            "allValue": null,
            "current": {
               "text": "18.7",
               "value": "18.7"
            },
            "datasource": "Prometheus",
            "hide": 0,
            "includeAll": false,
            "label": "CPU",
            "multi": false,
            "name": "costcpu",
            "options": [ ],
            "query": "$._config.cost_cpu",
            "refresh": 1,
            "regex": "",
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [ ],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
         },
         {
            "allValue": null,
            "current": {
               "text": "5.6",
               "value": "5.6"
            },
            "datasource": "Prometheus",
            "hide": 0,
            "includeAll": false,
            "label": "CPU Preemptible",
            "multi": false,
            "name": "costpcpu",
            "options": [ ],
            "query": "$._config.cost_pcpu",
            "refresh": 1,
            "regex": "",
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [ ],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
         },
         {
            "allValue": null,
            "current": {
               "text": "0.170",
               "value": "0.170"
            },
            "datasource": "Prometheus",
            "hide": 0,
            "includeAll": false,
            "label": "SSD",
            "multi": false,
            "name": "costStorageSSD",
            "options": [ ],
            "query": "$._config.cost_storage_ssd",
            "refresh": 1,
            "regex": "",
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [ ],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
         },
         {
            "allValue": null,
            "current": {
               "text": "0.040",
               "value": "0.040"
            },
            "datasource": "Prometheus",
            "hide": 0,
            "includeAll": false,
            "label": "Storage",
            "multi": false,
            "name": "costStorageStandard",
            "options": [ ],
            "query": "$._config.cost_storage_standard",
            "refresh": 1,
            "regex": "",
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [ ],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
         },
         {
            "allValue": null,
            "current": {
               "text": "3.57",
               "value": "3.57"
            },
            "datasource": "Prometheus",
            "hide": 0,
            "includeAll": false,
            "label": "RAM",
            "multi": false,
            "name": "costram",
            "options": [ ],
            "query": "$._config.cost_ram",
            "refresh": 1,
            "regex": "",
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [ ],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
         },
         {
            "allValue": null,
            "current": {
               "text": "0.75",
               "value": "0.75"
            },
            "datasource": "Prometheus",
            "hide": 0,
            "includeAll": false,
            "label": "RAM Preemptible",
            "multi": false,
            "name": "costpram",
            "options": [ ],
            "query": "$._config.cost_pram",
            "refresh": 1,
            "regex": "",
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [ ],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
         },
         {
            "allValue": null,
            "current": {
               "text": "monitoring",
               "value": "monitoring"
            },
            "datasource": "Prometheus",
            "hide": 2,
            "includeAll": false,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [ ],
            "query": "$._config.cost_namespace",
            "refresh": 1,
            "regex": "",
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [ ],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
         }
      ]
   },
   "time": {
      "from": "now-1h",
      "to": "now"
   },
   "timepicker": {
      "refresh_intervals": [
         "5s",
         "10s",
         "30s",
         "1m",
         "5m",
         "15m",
         "30m",
         "1h",
         "2h",
         "1d"
      ],
      "time_options": [
         "5m",
         "15m",
         "1h",
         "6h",
         "12h",
         "24h",
         "2d",
         "7d",
         "30d"
      ]
   },
   "timezone": "browser",
   "title": "Mintel /  Cost Analysis by Namespace",
   "uid": "c4190832ac79f23e775e70c7ddbf66a2",
   "version": 0
}
